using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Xml.Linq;
using Drision.Framework.BLL;
using Drision.Framework.Model;

namespace Drision.Framework.Web.SystemManagement
{
    public partial class NotcieManage : BasePage
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            BindTask();
        }

        protected override void OnError(EventArgs e)
        {
            // base.OnError(e);
            Exception ex = Server.GetLastError();
            if ((ex != null) && (ex is SessionExpiredException))
            {
                Server.ClearError();
                Response.Redirect("~/Home/Login.aspx");
            }
        }

        /// <summary>
        /// 绑定公告数据
        /// </summary>
        public void BindTask()
        {
            NoticeBLL noticeBLL = new NoticeBLL();
            this.noticeList.DataSource = noticeBLL.GetAllList();
            this.noticeList.DataBind();

        }

        /// <summary>
        /// 绑定行数据时触发
        /// </summary>
        protected void noticeList_RowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
        {
            try
            {
                if (e.Row.RowType == DataControlRowType.DataRow)
                {
                    LinkButton lbtnView = e.Row.FindControl("lbtnView") as LinkButton;
                    lbtnView.CommandArgument = DataBinder.Eval(e.Row.DataItem, "Notice_ID").ToString();

                    LinkButton lbtnDel = e.Row.FindControl("lbtnDel") as LinkButton;
                    lbtnDel.CommandArgument = DataBinder.Eval(e.Row.DataItem, "Notice_ID").ToString();

                }
            }
            catch { }
        }

        protected void noticeList_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            try
            {
                if (e.CommandName == "view")
                {
                    if (e.CommandArgument != null)
                    {
                        NoticeBLL noticeBLL = new NoticeBLL();
                        var notice = noticeBLL.GetModel(Convert.ToInt32(e.CommandArgument));
                        if (notice == null)
                            return;
                        this.lblComment.Text = notice.Notice_Comment;
                        this.Panel_Notice.Visible = true;
                        this.Panel1.Visible = false;

                    }
                }
                else if (e.CommandName == "del")
                {
                    Notice noticeModel = new Notice() { Notice_ID = Convert.ToInt32(e.CommandArgument) };
                    NoticeBLL noticeBLL = new NoticeBLL();
                    noticeBLL.Delete(noticeModel);
                    //刷新控件数据
                    BindTask();
                
                }
            }
            catch { }
        }

        protected void btnCancle_Click(object sender, EventArgs e)
        {
            this.lblComment.Text = "";
            this.Panel_Notice.Visible = false;

        }

        protected void btnAddPanel_Click(object sender, EventArgs e)
        {
            this.Panel_Notice.Visible = false;
            this.Panel1.Visible = this.Panel1.Visible ? false : true;
        }

        protected void btnAdd_Click(object sender, EventArgs e)
        {
            try
            {
                var noticeModel = new Notice()
                {
                    Notice_Title = this.txtTitle.Text.Trim(),
                    Notice_Comment = this.txtComment.Text.Trim(),
                    EntryDate = DateTime.Now,
                    Notice_Status = 1
                };
                NoticeBLL noticeBLL = new NoticeBLL();
                noticeBLL.Insert(noticeModel);

                var lastNotice = noticeBLL.GetLastModel();

                UserBLL userBLL = new UserBLL();
                var userList = userBLL.GetAllList();
                UserNotice usernoticeModel;
                UserNoticeBLL usernoticeBLL = new UserNoticeBLL();
                foreach (var user in userList)
                {
                    usernoticeModel = new UserNotice() { UserId = user.UserId, Notice_ID = lastNotice.Notice_ID, Is_Read = 0 };
                    usernoticeBLL.Insert(usernoticeModel);
                }
                
                //刷新控件数据
                BindTask();

                this.AjaxAlert("添加成功！");
            }
            catch { }
        }

        protected void btnCancle2_Click(object sender, EventArgs e)
        {
            this.Panel1.Visible = false;
        }
    }
}
